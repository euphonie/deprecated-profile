{"version":3,"file":"static/js/598.46a1aa1b.chunk.js","mappings":"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","sources":["resources/img/layered-waves-haikei-top.svg","components/dialogs/ProjectsDialog.tsx","components/experience/TechStackBox.tsx","components/experience/ProjectsBox.tsx","components/experience/ResponsabilitiesBox.tsx","components/ExperienceTimeline.tsx","pages/MyWork.tsx"],"sourcesContent":["var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLayeredWavesHaikeiTop(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"visual\",\n    viewBox: \"0 0 900 600\",\n    width: 900,\n    height: 600,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 900,\n    height: 600,\n    fill: \"#242535\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 224L21.5 243.8C43 263.7 86 303.3 128.8 312.7C171.7 322 214.3 301 257.2 292.3C300 283.7 343 287.3 385.8 276C428.7 264.7 471.3 238.3 514.2 211.5C557 184.7 600 157.3 642.8 162.5C685.7 167.7 728.3 205.3 771.2 210.3C814 215.3 857 187.7 878.5 173.8L900 160L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#fa7268\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 315L21.5 304.3C43 293.7 86 272.3 128.8 253.8C171.7 235.3 214.3 219.7 257.2 218.5C300 217.3 343 230.7 385.8 239.3C428.7 248 471.3 252 514.2 250.7C557 249.3 600 242.7 642.8 258.7C685.7 274.7 728.3 313.3 771.2 306.7C814 300 857 248 878.5 222L900 196L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#ea5767\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 292L21.5 296.7C43 301.3 86 310.7 128.8 311.2C171.7 311.7 214.3 303.3 257.2 292.5C300 281.7 343 268.3 385.8 287C428.7 305.7 471.3 356.3 514.2 367.2C557 378 600 349 642.8 325.8C685.7 302.7 728.3 285.3 771.2 295.8C814 306.3 857 344.7 878.5 363.8L900 383L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#d73b67\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 392L21.5 390.8C43 389.7 86 387.3 128.8 393.3C171.7 399.3 214.3 413.7 257.2 396.3C300 379 343 330 385.8 310C428.7 290 471.3 299 514.2 310.3C557 321.7 600 335.3 642.8 334.7C685.7 334 728.3 319 771.2 324.8C814 330.7 857 357.3 878.5 370.7L900 384L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#c62368\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 464L21.5 446.7C43 429.3 86 394.7 128.8 380.2C171.7 365.7 214.3 371.3 257.2 381.7C300 392 343 407 385.8 403.3C428.7 399.7 471.3 377.3 514.2 384.2C557 391 600 427 642.8 433.2C685.7 439.3 728.3 415.7 771.2 408C814 400.3 857 408.7 878.5 412.8L900 417L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#c62368\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 422L21.5 428.8C43 435.7 86 449.3 128.8 459.7C171.7 470 214.3 477 257.2 475C300 473 343 462 385.8 458.8C428.7 455.7 471.3 460.3 514.2 467C557 473.7 600 482.3 642.8 477.7C685.7 473 728.3 455 771.2 445.3C814 435.7 857 434.3 878.5 433.7L900 433L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#d73b67\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 531L21.5 525.2C43 519.3 86 507.7 128.8 501.3C171.7 495 214.3 494 257.2 493.8C300 493.7 343 494.3 385.8 492.2C428.7 490 471.3 485 514.2 480.8C557 476.7 600 473.3 642.8 477C685.7 480.7 728.3 491.3 771.2 498.3C814 505.3 857 508.7 878.5 510.3L900 512L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#ea5767\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 524L21.5 529.3C43 534.7 86 545.3 128.8 543C171.7 540.7 214.3 525.3 257.2 516C300 506.7 343 503.3 385.8 503.5C428.7 503.7 471.3 507.3 514.2 514.7C557 522 600 533 642.8 538.3C685.7 543.7 728.3 543.3 771.2 543.5C814 543.7 857 544.3 878.5 544.7L900 545L900 601L878.5 601C857 601 814 601 771.2 601C728.3 601 685.7 601 642.8 601C600 601 557 601 514.2 601C471.3 601 428.7 601 385.8 601C343 601 300 601 257.2 601C214.3 601 171.7 601 128.8 601C86 601 43 601 21.5 601L0 601Z\",\n    fill: \"#fa7268\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLayeredWavesHaikeiTop);\nexport default __webpack_public_path__ + \"static/media/layered-waves-haikei-top.0d1b00c55ae0e6b4a3a9f294ec454c46.svg\";\nexport { ForwardRef as ReactComponent };","import Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ProjectsDialogProps } from '../../common/types';\nimport theme from '../../resources/theme/CustomTheme.d';\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\nimport layeredBG from '../../resources/img/layered-waves-haikei-top.svg';\n\nexport const ProjectsDialog = (props: ProjectsDialogProps) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <Dialog\n                maxWidth=\"md\"\n                onClose={props.handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={props.open}\n                sx={{ \n                    backgorundColor: 'transparent'\n                }}\n            >\n                <DialogTitle\n                    variant=\"h6\"\n                    sx={{\n                        m: 0,\n                        p: 2,\n                        backgroundColor: 'secondary.main',\n                        color: 'white.main',\n                    }}\n                >\n                    {props.activeProject?.name ?? ''}\n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={props.handleClose}\n                        sx={{\n                            position: 'absolute',\n                            right: 8,\n                            top: 8,\n                            color: (theme) => theme.palette.grey[500],\n                        }}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent\n                    sx={{ \n                        color: 'white.main',\n                        backgorundColor: 'transparent',\n                        height: '28rem',\n                        backgroundImage: `url(${layeredBG})`,\n                        backgroundSize: 'cover',\n                        backgroundRepeat: 'no-repeat',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: '0.5rem'\n                    }}\n                >\n                    {props.children}\n                </DialogContent>\n            </Dialog>\n        </ThemeProvider>\n    );\n};\n","import List from '@mui/material/List/List';\nimport { TechStackBoxProps, TechStackOption } from '../../common/types';\nimport Icon from '@mui/material/Icon/Icon';\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\nimport theme from '../../resources/theme/CustomTheme.d';\nimport ListItemIcon from '@mui/material/ListItemIcon/ListItemIcon';\nimport useMediaQuery from '@mui/material/useMediaQuery/useMediaQuery';\n\nexport const TechStackBox = (props: TechStackBoxProps) => {\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    let technologies = props.technologies;\n    if (!props.showComplete){\n        technologies = [\n            ...props.technologies.slice(0, 5), \n            {\n                \"img\": 'more.svg',\n                \"label\": 'See others'\n            }\n        ];\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <List\n                sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: '1rem', flexBasis: 'auto' }}\n            >\n                {technologies.map((tech: TechStackOption, i: number) => {\n                    return (\n                        <ListItemIcon\n                            key={i}\n                            color=\"white\"\n                            aria-details={tech.label}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                marginTop: '0',\n                                alignItems: 'center',\n                                backgroundColor: props.showComplete ? 'fadedAccent.main' : 'transparent',\n                                borderRadius: '4px',\n                                padding: '4px',\n                                flexGrow: '1'\n                            }}\n                        >\n                            <Icon sx={{fontSize: isMobile ?  '1.5rem' : '2.5rem', overflow: 'revert'}}>\n                                <img\n                                    style={{\n                                        width: '100%',\n                                        height: '100%',\n                                        color: 'white'\n                                    }}\n                                    src={`/tech/${tech.img}`}\n                                    alt={tech.label}\n                                />\n                            </Icon>\n                            {\n                                props.showComplete ? \n                                    <ListItemText sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>{tech.label}</ListItemText>\n                                    : null\n                            }\n                        </ListItemIcon>\n                    );\n                })}\n            </List>\n        </ThemeProvider>\n    );\n};\n","import Box from '@mui/material/Box/Box';\nimport Button from '@mui/material/Button/Button';\nimport Typography from '@mui/material/Typography/Typography';\nimport { useTranslation } from 'react-i18next';\nimport { JobProject, ProjectBoxProps } from '../../common/types';\nimport SplitscreenOutlinedIcon from '@mui/icons-material/SplitscreenOutlined';\nimport { useState } from 'react';\nimport { ProjectsDialog } from '../dialogs/ProjectsDialog';\nimport moment from 'moment';\nimport { TechStackBox } from './TechStackBox';\nimport Divider from '@mui/material/Divider/Divider';\nimport Replay30Icon from '@mui/icons-material/Replay30';\nimport useMediaQuery from '@mui/material/useMediaQuery/useMediaQuery';\nimport theme from '../../resources/theme/CustomTheme.d';\n\nexport const ProjectsBox = (props: ProjectBoxProps) => {\n    const { t } = useTranslation();\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [activeProject, setActiveProject] = useState<JobProject>();\n    const [isProjectModalOpen, setProjectModalOpen] = useState<boolean>(false);\n\n    const handleProjectModalOpen = (project: JobProject) => {\n        setActiveProject(project);\n        setProjectModalOpen(true);\n    };\n\n    const handleProjectModalClose = (evt: any) => {\n        setProjectModalOpen(false);\n    };\n\n    return (\n        <Box>\n            <Typography\n                variant=\"h6\"\n                textAlign=\"left\"\n                component=\"span\"\n                sx={{\n                    display: 'flex',\n                    gap: '0.8rem',\n                    alignItems: 'center',\n                }}\n            >\n                <SplitscreenOutlinedIcon />\n                {t('projects.title')}\n            </Typography>\n            <Box sx={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>\n                {props.job.projects.map((project: JobProject, i: number) => {\n                    return (\n                        <Button\n                            key={i}\n                            size=\"large\"\n                            variant=\"outlined\"\n                            color=\"white\"\n                            onClick={(evt) => handleProjectModalOpen(project)}\n                            sx={{\n                                padding: '20px',\n                                marginTop: '20px',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                flexWrap: 'wrap',\n                                flex: isMobile ? '100%' : '33%',\n                            }}\n                        >\n                            {project.name}\n\n                            <TechStackBox\n                                showComplete={false}\n                                technologies={project.techStack ?? []}\n                            />\n                        </Button>\n                    );\n                })}\n            </Box>\n            <ProjectsDialog\n                open={isProjectModalOpen}\n                activeProject={activeProject}\n                handleClose={handleProjectModalClose}\n            >\n                <Typography variant=\"overline\" textAlign={isMobile ? 'center' : 'inherit'}>\n                    <span>{`${moment(activeProject?.startDate).format(\n                        'MM/YYYY'\n                    )} - ${moment(activeProject?.endDate).format(\n                        'MM/YYYY'\n                    )}`}</span>\n                </Typography>\n                {\n                activeProject?.multipleReleases ?\n                        <Typography\n                            sx={{\n                                fontStyle: 'italic',\n                                alignItems: 'right',\n                                backgroundColor: 'fadedAccent.main',\n                                borderRadius: '5px',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                flexDirection: 'row',\n                                gap: '1rem',\n                            }}\n                        >\n                            {t('projects.dialog.multipleReleasesLabel')}\n                            <Replay30Icon />\n                        </Typography>\n                        : null\n                }\n                <Divider />\n                <Typography variant=\"h6\" sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>\n                    {t('projects.dialog.descriptionLabel')}\n                </Typography>\n                <Typography variant=\"body1\" sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>\n                    {activeProject?.description ?? ''}\n                </Typography>\n                <Divider />\n                <Typography variant=\"h6\" sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>\n                    {t('projects.dialog.outcomeLabel')}\n                </Typography>\n                <Typography variant=\"body1\" sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>\n                    {activeProject?.outcome ?? ''}\n                </Typography>\n                <Divider />\n                <Typography variant=\"h6\" sx={{fontSize: isMobile ? '0.8rem' : 'inherit'}}>\n                    {t('projects.dialog.techStackLabel')}\n                </Typography>\n                <TechStackBox\n                    showComplete={true}\n                    technologies={activeProject?.techStack ?? []}\n                />\n            </ProjectsDialog>\n        </Box>\n    );\n};\n","import AssignmentIcon from '@mui/icons-material/Assignment';\nimport TaskAltOutlinedIcon from '@mui/icons-material/TaskAltOutlined';\nimport Box from \"@mui/material/Box/Box\";\nimport List from '@mui/material/List/List';\nimport ListItem from '@mui/material/ListItem/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\nimport Typography from \"@mui/material/Typography/Typography\";\nimport { useTranslation } from 'react-i18next';\nimport { ResponsabilitiesBoxProps } from '../../common/types';\n\nexport const ResponsabilitiesBox = (props: ResponsabilitiesBoxProps) => {\n    const { t } = useTranslation();\n\n    return (\n        <Box>\n            <Typography\n                textAlign=\"left\"\n                variant=\"h6\"\n                component=\"span\"\n                sx={{\n                    display: 'flex',\n                    gap: '0.8rem',\n                    alignItems: 'center',\n                }}\n            >\n                <AssignmentIcon color=\"white\" />\n                {t('mywork.journey.responsabilities')}\n            </Typography>\n            <Typography\n                variant=\"caption\"\n                component=\"span\"\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '1rem',\n                    marginTop: '5px',\n                }}\n            >\n                <List dense={true}>\n                    {props.job.responsabilities.map((task: string, i: number) => {\n                        return (\n                            <ListItem key={i}>\n                                <ListItemIcon>\n                                    <TaskAltOutlinedIcon color=\"white\" />\n                                </ListItemIcon>\n                                <ListItemText>{task}</ListItemText>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Typography>\n        </Box>\n    );\n};\n","import Timeline from '@mui/lab/Timeline/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator/TimelineSeparator';\nimport TimelineContent from '@mui/lab/TimelineContent/TimelineContent';\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent/TimelineOppositeContent';\nimport TimelineDot from '@mui/lab/TimelineDot/TimelineDot';\nimport EngineeringIcon from '@mui/icons-material/Engineering';\nimport LaptopMacIcon from '@mui/icons-material/LaptopMac';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport WorkspacesIcon from '@mui/icons-material/Workspaces';\nimport Typography from '@mui/material/Typography';\nimport mywork from '../config/mywork.json';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport Box from '@mui/material/Box/Box';\nimport theme from '../resources/theme/CustomTheme.d';\nimport Paper from '@mui/material/Paper/Paper';\nimport { AnimateWhenVisible } from './animations/AnimateWhenVisible';\nimport { ProjectsBox } from './experience/ProjectsBox';\nimport { Job } from '../common/types';\nimport { ResponsabilitiesBox } from './experience/ResponsabilitiesBox';\nimport useMediaQuery from '@mui/material/useMediaQuery/useMediaQuery';\n\nexport default function ExperienceTimeline() {\n    const { t } = useTranslation();\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <Timeline position={isMobile ? 'right' : 'alternate'}>\n            <Typography sx={{ textAlign: 'center' }} variant=\"h5\">\n                {t('mywork.journey.title')}\n            </Typography>\n            <Box m={2}>\n                {mywork.work.map((job: Job, i: number) => {\n                    const sDate = moment(job.startDate);\n                    const eDate = moment(job.endDate);\n                    const monthDuration = eDate.diff(sDate, 'months') % 12;\n                    const yearDuration = eDate.diff(sDate, 'years');\n\n                    return (\n                        <TimelineItem \n                          key={i}\n                          sx={{ \n                            flexDirection: isMobile ? 'column' : 'inherit',\n                            alignItems: isMobile ? 'center' : 'inherit' \n                          }}\n                        >\n                            <TimelineOppositeContent\n                                sx={{\n                                    m: 'auto 0',\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    fontWeight: '600'\n                                }}\n                                variant=\"h6\"\n                                color=\"text.secondary\"\n                            >\n                                  <span>{`${sDate.format(\n                                      'MM/YYYY'\n                                  )} - ${eDate.format('MM/YYYY')}`}</span>\n                                  <span>{`(~${yearDuration} years ${monthDuration} Months)`}</span>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot\n                                    color=\"primary\"\n                                    sx={{ borderRadius: '2px' }}\n                                >\n                                    {job.icon === 'leadership' ? (\n                                        <PersonOutlineIcon />\n                                    ) : (\n                                        <LaptopMacIcon />\n                                    )}\n                                </TimelineDot>\n                            </TimelineSeparator>\n                            <TimelineContent\n                                sx={{\n                                    py: '12px',\n                                    px: 2\n                                }}\n                            >\n                                <AnimateWhenVisible animation=\"fadeTop\">\n                                    <Paper\n                                        sx={{\n                                            padding: '30px',\n                                            backgroundColor: '#596F62',\n                                            color: theme.palette.white.main,\n                                            borderColor: 'secondary',\n                                            borderStyle: 'solid',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            gap: '1rem'\n                                        }}\n                                    >\n                                        <Typography\n                                            textAlign=\"left\"\n                                            variant=\"h5\"\n                                            component=\"span\"\n                                            sx={{\n                                                display: 'flex',\n                                                gap: '0.8rem',\n                                                alignItems: 'center',\n                                            }}\n                                        >\n                                            <EngineeringIcon color=\"white\" />\n                                            {job.position}\n                                        </Typography>\n                                        <Typography\n                                            textAlign=\"left\"\n                                            variant=\"body2\"\n                                            component=\"span\"\n                                            sx={{\n                                                display: 'flex',\n                                                gap: '0.8rem',\n                                                alignItems: 'center',\n                                            }}\n                                        >\n                                            <BusinessIcon color=\"white\" />\n                                            {job.company}\n                                        </Typography>\n                                        <Typography\n                                            textAlign=\"left\"\n                                            variant=\"body2\"\n                                            component=\"span\"\n                                            sx={{\n                                                display: 'flex',\n                                                gap: '0.8rem',\n                                                alignItems: 'center',\n                                            }}\n                                        >\n                                            <WorkspacesIcon color=\"white\" />\n                                            {`${t('mywork.journey.team')}: ${\n                                                job.team\n                                            }`}\n                                        </Typography>\n                                        <ResponsabilitiesBox job={job} />\n                                        <ProjectsBox job={job} />\n                                    </Paper>\n                                </AnimateWhenVisible>\n                            </TimelineContent>\n                        </TimelineItem>\n                    );\n                })}\n            </Box>\n        </Timeline>\n    );\n}\n","import Container from \"@mui/material/Container/Container\";\nimport Grid from \"@mui/material/Grid/Grid\";\nimport ExperienceTimeline from \"../components/ExperienceTimeline\";\nimport stackedBG from '../resources/img/stacked-waves-haikei.svg';\n\nexport default function MyWork() {\n    return(\n        <Container disableGutters maxWidth={false} sx={{backgroundImage: `url(${stackedBG})`, backgroundSize: 'cover'}}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <ExperienceTimeline />\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}"],"names":["ProjectsDialog","props","ThemeProvider","theme","Dialog","maxWidth","onClose","handleClose","open","sx","backgorundColor","DialogTitle","variant","m","p","backgroundColor","color","activeProject","name","IconButton","onClick","position","right","top","palette","grey","Close","DialogContent","height","backgroundImage","layeredBG","backgroundSize","backgroundRepeat","display","flexDirection","gap","children","TechStackBox","isMobile","useMediaQuery","technologies","showComplete","slice","List","flexWrap","flexBasis","map","tech","i","ListItemIcon","label","marginTop","alignItems","borderRadius","padding","flexGrow","Icon","fontSize","overflow","style","width","src","img","alt","ListItemText","ProjectsBox","t","useTranslation","useState","setActiveProject","isProjectModalOpen","setProjectModalOpen","Box","Typography","textAlign","component","SplitscreenOutlined","job","projects","project","Button","size","evt","handleProjectModalOpen","flex","techStack","moment","startDate","format","endDate","multipleReleases","fontStyle","justifyContent","Replay30","Divider","description","outcome","ResponsabilitiesBox","Assignment","dense","responsabilities","task","ListItem","TaskAltOutlined","ExperienceTimeline","Timeline","mywork","sDate","eDate","monthDuration","diff","yearDuration","TimelineItem","TimelineOppositeContent","fontWeight","TimelineSeparator","TimelineDot","icon","PersonOutline","LaptopMac","TimelineContent","py","px","AnimateWhenVisible","animation","Paper","borderColor","borderStyle","Engineering","Business","company","Workspaces","team","MyWork","Container","disableGutters","stackedBG","Grid","container","item","xs"],"sourceRoot":""}